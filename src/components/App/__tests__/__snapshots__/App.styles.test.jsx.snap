// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing App.styles... Button should render correctly without props 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-bxivhb",
        "isStatic": true,
        "rules": Array [
          "
      display: block;
      width: 32px;
      height: 32px;
      color: #727272;
      cursor: pointer;
      transition: 0.2s transform ease;
    
      &:hover {
        transform: scale(1.1);
      }
    ",
        ],
      },
      "displayName": "styled.i",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-bxivhb",
      "target": "i",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
/>
`;

exports[`Testing App.styles... Container should render correctly without props 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-bdVaJa",
        "isStatic": true,
        "rules": Array [
          "
      width: fit-content;
      height: fit-content;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      margin: auto;
    ",
        ],
      },
      "displayName": "styled.div",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-bdVaJa",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
/>
`;

exports[`Testing App.styles... ControlsContainer should render correctly without props 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-htpNat",
        "isStatic": true,
        "rules": Array [
          "
      display: flex;
      justify-content: center;
      width: 640px;
      padding: 8px;
      & > * {
        margin: 8px;
      }
    ",
        ],
      },
      "displayName": "styled.div",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-htpNat",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
/>
`;

exports[`Testing App.styles... PlayerContainer should render correctly as visible true 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-bwzfXH",
        "isStatic": false,
        "rules": Array [
          "
      display: block;
      height: fit-content;
      width: fit-content;
      transition: 0.2s all ease;
      & > iframe { display: block; }
    
      ",
          [Function],
          "
    ",
        ],
      },
      "displayName": "styled.div",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-bwzfXH",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
  visible={true}
/>
`;

exports[`Testing App.styles... PlayerContainer should render correctly without props 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-bwzfXH",
        "isStatic": false,
        "rules": Array [
          "
      display: block;
      height: fit-content;
      width: fit-content;
      transition: 0.2s all ease;
      & > iframe { display: block; }
    
      ",
          [Function],
          "
    ",
        ],
      },
      "displayName": "styled.div",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-bwzfXH",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
/>
`;

exports[`Testing App.styles... ProgressBar should render correctly with value 1`] = `
<styled.div
  onClick={[Function]}
  value={50}
>
  <styled.div
    value={50}
  >
    <styled.div
      offset={50}
    />
  </styled.div>
</styled.div>
`;

exports[`Testing App.styles... ProgressBarContainer should render correctly without props 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-EHOje",
        "isStatic": true,
        "rules": Array [
          "
      position: relative;
      height: fit-content;
      width: 100%;
    ",
        ],
      },
      "displayName": "styled.div",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-EHOje",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
/>
`;

exports[`Testing App.styles... ProgressBarCustom should render correctly with value 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-gzVnrw",
        "isStatic": false,
        "rules": Array [
          "
      position: relative;
      height: 6px;
      width: 100%;
      margin: 16px 0;
      border-radius: 4px;
      background: #757575;
      &::before {
        content: '';
        display: block;
        position: absolute;
        top: 0;
        left: 0;
        height: 6px;
        width: ",
          [Function],
          "%;
        border-radius: 4px;
        background: #E0E0E0;
        transition: all 100ms ease;
      }
      &:hover {
        ",
          ".sc-bZQynM",
          " {
          opacity: 1;
        }
        &::before {
          background: #FF0000;
        }
      }
    ",
        ],
      },
      "displayName": "styled.div",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-gzVnrw",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
  value="50"
/>
`;

exports[`Testing App.styles... ProgressBarCustom should render correctly without props 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-gzVnrw",
        "isStatic": false,
        "rules": Array [
          "
      position: relative;
      height: 6px;
      width: 100%;
      margin: 16px 0;
      border-radius: 4px;
      background: #757575;
      &::before {
        content: '';
        display: block;
        position: absolute;
        top: 0;
        left: 0;
        height: 6px;
        width: ",
          [Function],
          "%;
        border-radius: 4px;
        background: #E0E0E0;
        transition: all 100ms ease;
      }
      &:hover {
        ",
          ".sc-bZQynM",
          " {
          opacity: 1;
        }
        &::before {
          background: #FF0000;
        }
      }
    ",
        ],
      },
      "displayName": "styled.div",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-gzVnrw",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
/>
`;

exports[`Testing App.styles... ProgressBarHandle should render correctly with offset 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-bZQynM",
        "isStatic": false,
        "rules": Array [
          "
      position: absolute;
      opacity: 0;
      height: 15px;
      width: 15px;
      border-radius: 50%;
      top: -5px;
      left: ",
          [Function],
          "%;
      transform: translateX(-5px);
      background: #EEEEEE;
      transition: all 100ms ease;
    ",
        ],
      },
      "displayName": "styled.div",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-bZQynM",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
  offset="50"
/>
`;

exports[`Testing App.styles... ProgressBarHandle should render correctly without props 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-bZQynM",
        "isStatic": false,
        "rules": Array [
          "
      position: absolute;
      opacity: 0;
      height: 15px;
      width: 15px;
      border-radius: 50%;
      top: -5px;
      left: ",
          [Function],
          "%;
      transform: translateX(-5px);
      background: #EEEEEE;
      transition: all 100ms ease;
    ",
        ],
      },
      "displayName": "styled.div",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-bZQynM",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
/>
`;

exports[`Testing App.styles... Timer should render correctly without props 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-ifAKCX",
        "isStatic": true,
        "rules": Array [
          "
      display: flex;
      color: #727272;
      align-items: center;
      font-weight: 700;
      font-size: 18px;
    ",
        ],
      },
      "displayName": "styled.div",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-ifAKCX",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
/>
`;
